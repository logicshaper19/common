[tool:pytest]
# Comprehensive pytest configuration for Common Supply Chain Platform

# Test discovery
testpaths = app/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=term-missing
    --cov-report=html:test_coverage/html
    --cov-report=xml:test_coverage/coverage.xml
    --cov-fail-under=80
    --junitxml=test_reports/junit.xml
    --html=test_reports/report.html
    --self-contained-html

# Async support
asyncio_mode = auto

# Test markers
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - test complete workflows
    security: Security tests - test authentication, authorization, input validation
    performance: Performance tests - test response times and load
    slow: Slow tests - tests that take more than 5 seconds
    load: Load tests - test system under high load
    smoke: Smoke tests - basic functionality tests
    regression: Regression tests - test for known issues
    api: API tests - test API endpoints
    database: Database tests - test database operations
    auth: Authentication tests - test login, registration, tokens
    authorization: Authorization tests - test permissions and access control
    validation: Input validation tests - test data validation
    error_handling: Error handling tests - test error scenarios
    workflow: Workflow tests - test business processes
    compliance: Compliance tests - test regulatory compliance
    traceability: Traceability tests - test supply chain tracking
    documents: Document tests - test file upload and management
    notifications: Notification tests - test messaging system
    analytics: Analytics tests - test reporting and insights

# Test collection
collect_ignore = [
    "node_modules",
    "frontend",
    "docs",
    "migrations",
    "scripts",
    "*.pyc",
    "__pycache__"
]

# Coverage configuration
[coverage:run]
source = app
omit = [
    "app/tests/*",
    "app/migrations/*",
    "app/scripts/*",
    "app/__init__.py",
    "app/main.py"
]

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test environment variables
[testenv]
TESTING = true
DATABASE_URL = sqlite:///./test_comprehensive.db
REDIS_URL = redis://localhost:6379/1
SECRET_KEY = test-secret-key-for-testing-only
LOG_LEVEL = WARNING
